<Window x:Class="TestingSystem.Views.Teacher.TestInfoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ag="clr-namespace:WpfAutoGrid;assembly=WpfAutoGrid.Core"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:busyIndicator="https://github.com/Peoky/BusyIndicator"
        xmlns:converters="clr-namespace:TestingSystem.Views.Converters"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="{StaticResource MainFontSize}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        WindowStartupLocation="CenterScreen"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Background="{DynamicResource MaterialDesignPaper}"
        Title="Просмотр и управление тестом" Width="1000" Height="850" MinWidth="550" MinHeight="650" Loaded="OnWindowLoaded">
    <Window.Icon>
        <BitmapImage UriSource="https://img.icons8.com/external-vitaliy-gorbachev-lineal-color-vitaly-gorbachev/100/000000/external-test-online-learning-vitaliy-gorbachev-lineal-color-vitaly-gorbachev.pnghttps://img.icons8.com/external-vitaliy-gorbachev-lineal-color-vitaly-gorbachev/100/000000/external-test-online-learning-vitaliy-gorbachev-lineal-color-vitaly-gorbachev.png">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="DownloadFailed">
                    <b:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" PropertyName="Icon" Value="{x:Null}"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="DecodeFailed">
                    <b:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" PropertyName="Icon" Value="{x:Null}"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </BitmapImage>
    </Window.Icon>
    
    <busyIndicator:BusyMask IsBusy="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Tag, Mode=OneWay,
                                     Converter={StaticResource stringIsLoadedToBoolIsBusyConverter}}" BusyContent="Загрузка..." 
                            IndicatorType="{StaticResource BusyMaskDefaultIndicatorType}" Background="{StaticResource BusyMaskDefaultBackground}">
        <ag:AutoGrid Rows="1*, 1*, 1*, 1*, 1*, 1*, 1*, 1*, 4*, 1*" Columns="1*, 1*" ChildMargin="{StaticResource MarginOfEditControl}">
            <Grid.Resources>
                <converters:UshortNumberOfSecondsToTimeHoursMinutesStringConverter x:Key="ushortNumberOfSecondsToTimeHoursMinutesStringConverter"/>
                <converters:UshortNumberOfSecondsToTimeMinutesSecondsStringConverter x:Key="ushortNumberOfSecondsToTimeMinutesSecondsStringConverter"/>
                <converters:BoolToStateStringConverter x:Key="boolToStateStringConverter"/>
                <converters:BoolByIsTeacherOwnerToStringAccessConverter x:Key="boolByIsTeacherOwnerToStringAccessConverter"/>

                <Style TargetType="TextBlock" BasedOn="{StaticResource MainTextBlockStyle}"/>
                <Style TargetType="DataGrid" BasedOn="{StaticResource OnlyReadDataGridStyle}"/>
                <Style TargetType="GroupBox" BasedOn="{StaticResource MainGroupBoxStyle}"/>
                <Style TargetType="ComboBox" BasedOn="{StaticResource MainComboBoxStyle}"/>
            </Grid.Resources>

            <DockPanel Grid.ColumnSpan="2">
                <md:PopupBox DockPanel.Dock="Right" Margin="0 5">
                    <StackPanel Orientation="Vertical">
                        <Button Command="{Binding SaveTestToTextFileCommand}">
                            <TextBlock Text="Сохранить тест в текстовый файл"/>
                        </Button>
                        <Button Command="{Binding SaveTestWithAnswersToTextFileCommand}">
                            <TextBlock Text="Сохранить тест в текстовый файл (включая правильные ответы)"/>
                        </Button>
                    </StackPanel>
                </md:PopupBox>
                <Viewbox StretchDirection="DownOnly">
                    <TextBlock FontSize="30" Text="{Binding Test.Name}"/>
                </Viewbox>
            </DockPanel>

            <TextBlock Text="Максимальное количество баллов:"/>
            <TextBlock Text="{Binding Test.MaximumPoints}"/>

            <TextBlock Text="Время на ответ для каждого вопроса (по умолчанию):"/>
            <TextBlock Text="{Binding Test.NumberOfSecondsToAnswerEachQuestion,
                          Converter={StaticResource ushortNumberOfSecondsToTimeMinutesSecondsStringConverter},
                          TargetNullValue='Неограничено'}"/>

            <TextBlock Text="Время на прохождение теста:"/>
            <TextBlock Text="{Binding Test.NumberOfSecondsToComplete,
                          Converter={StaticResource ushortNumberOfSecondsToTimeHoursMinutesStringConverter},
                          TargetNullValue='Неограничено'}"/>

            <TextBlock Text="Подсчёт баллов при неполном ответе:"/>
            <TextBlock Text="{Binding Test.IsAccountingForIncompleteAnswersEnabled, Converter={StaticResource boolToStateStringConverter}}"/>

            <TextBlock Text="Владельцы теста:"/>
            <ComboBox ItemsSource="{Binding Test.OwnerTeachers.AsObservable}" SelectedIndex="{StaticResource DefaultSelectedIndex}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                        <Run Text="{Binding Name}"/><Run Text=" ("/><Run Text="{Binding FullName}"/><Run Text=")"/>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <TextBlock Text="Количество вопросов:"/>
            <TextBlock Text="{Binding Test.NumberOfQuestions}"/>

            <TextBlock Text="Права на управление тестом:"/>
            <TextBlock Text="{Binding IsTeacherOwner, Mode=OneWay, Converter={StaticResource boolByIsTeacherOwnerToStringAccessConverter}}"/>

            <GroupBox Grid.ColumnSpan="2" Header="Вопросы" Margin="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="7*"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>

                    <DataGrid x:Name="questionsDataGrid" ItemsSource="{Binding Test.Questions.AsObservable, IsAsync=True}" IsReadOnly="False">
                        <DataGrid.Columns>
                            <md:DataGridTextColumn Header="№" Binding="{Binding SerialNumberInTest}" IsReadOnly="True"/>
                            <md:DataGridTextColumn Header="Стоимость в баллах" Binding="{Binding PointsCost, Converter={StaticResource doubleOneDecimalToStringConverter}}" IsReadOnly="True"/>
                            <md:DataGridTextColumn Header="Время на ответ" 
                                               Binding="{Binding NumberOfSecondsToAnswer,
                                               Converter={StaticResource ushortNumberOfSecondsToTimeMinutesSecondsStringConverter},
                                               TargetNullValue='Неограничено'}" IsReadOnly="True"/>
                            <md:DataGridTextColumn Header="Количество вариантов ответа" Binding="{Binding NumberOfAnswerOptions}" IsReadOnly="True"/>
                            <md:DataGridComboBoxColumn Header="Варианты ответа" ItemsSourceBinding="{Binding AnswerOptions.AsObservable}"
                                                   IsEditable="False" md:ComboBoxAssist.ShowSelectedItem="True"
                                                   IsReadOnly="False" DisplayMemberPath="Content"/>
                            <DataGridTextColumn Header="Содержимое вопроса" Binding="{Binding Content}" Width="SizeToCells" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>

            <busyIndicator:BusyMask IsBusy="{Binding TestUpdaterFromDatabaseBackgroundWorker.IsBusy}" Grid.ColumnSpan="2"
                                    BusyContent="" IndicatorType="{StaticResource BusyMaskDefaultIndicatorType}" Background="{StaticResource BusyMaskDefaultBackground}">
                <ag:AutoGrid Rows="1*" Columns="1*, 1*">
                    <Button Style="{StaticResource EditButtonStyle}" Command="{Binding EditTestAsyncCommand}" Margin="50 0">
                        <TextBlock Text="Редактировать тест"/>
                    </Button>
                    <Button Style="{StaticResource RemoveButtonStyle}" Command="{Binding RemoveTestAsyncCommand}" Margin="50 0">
                        <TextBlock Text="Удалить тест"/>
                    </Button>
                </ag:AutoGrid>
            </busyIndicator:BusyMask>
        </ag:AutoGrid>
    </busyIndicator:BusyMask>
</Window>