<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:accb="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="MainFontSize">17</system:Double>
    <system:Double x:Key="DataGridFontSize">16</system:Double>
    <system:Double x:Key="ValidationMessageFontSize">11</system:Double>
    <Thickness x:Key="MarginOfAuthorizationControl">75 0</Thickness>
    <Thickness x:Key="MarginOfEditControl">5 10</Thickness>
    <system:Int32 x:Key="DefaultSelectedIndex">0</system:Int32>

    <system:String x:Key="ConfirmButtonText">Подтвердить</system:String>
    <system:String x:Key="CancelButtonText">Отмена</system:String>

    <Style x:Key="MainTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}"/>
        <Setter Property="FontSize" Value="{StaticResource MainFontSize}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style x:Key="ReferenceTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OutlinedTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource MainFontSize}"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
        <Setter Property="md:ValidationAssist.OnlyShowOnFocus" Value="False"/>
        <Setter Property="md:ValidationAssist.FontSize" Value="{StaticResource ValidationMessageFontSize}"/>
    </Style>

    <Style x:Key="NumericTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource OutlinedTextBoxStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="MinWidth" Value="50"/>
    </Style>

    <Style x:Key="TimeHoursMinutesTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource OutlinedTextBoxStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="md:HintAssist.Hint" Value="(чч:мм)"/>
        <Setter Property="md:HintAssist.IsFloating" Value="False"/>
    </Style>
    <Style x:Key="TimeMinutesSecondsTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource OutlinedTextBoxStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="md:HintAssist.Hint" Value="(мм:сс)"/>
        <Setter Property="md:HintAssist.IsFloating" Value="False"/>
    </Style>

    <Style x:Key="MainPasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource MaterialDesignOutlinedRevealPasswordBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource MainFontSize}"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
        <Setter Property="md:ValidationAssist.OnlyShowOnFocus" Value="False"/>
        <Setter Property="md:ValidationAssist.FontSize" Value="{StaticResource ValidationMessageFontSize}"/>
        <Setter Property="md:HintAssist.Hint" Value="Пароль"/>
    </Style>

    <Style x:Key="RoundedRectangularButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="-5"/>
        <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth0"/>
        <Setter Property="md:ButtonAssist.CornerRadius" Value="10"/>
    </Style>

    <Style x:Key="RectangularButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="-5"/>
        <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth0"/>
        <Setter Property="md:ButtonAssist.CornerRadius" Value="3"/>
    </Style>

    <Style x:Key="CircleButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFloatingActionAccentButton}">
        <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth0"/>
    </Style>

    <Style x:Key="FlatButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Padding" Value="-5"/>
    </Style>
    <Style x:Key="FlatButtonWithoutHighlightStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="md:RippleAssist.IsDisabled" Value="True"/>
        <Setter Property="Padding" Value="-5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" 
                                        CornerRadius="{Binding Path=(wpf:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        x:Name="border"/>
                                <ProgressBar x:Name="ProgressBar"
                                             Style="{DynamicResource MaterialDesignLinearProgressBar}"
                                             Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Minimum)}"
                                             Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Maximum)}"
                                             Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IndicatorForeground)}"
                                             Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IndicatorBackground)}"
                                             BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IndicatorBackground)}"
                                             Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Value)}"
                                             IsIndeterminate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IsIndeterminate)}"
                                             Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                             Height="{TemplateBinding Height}"
                                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}, Path=ActualWidth}"
                                             Opacity="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ButtonProgressAssist.Opacity)}"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Center">
                                    <ProgressBar.Clip>
                                        <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                            <Binding ElementName="border" Path="ActualWidth" />
                                            <Binding ElementName="border" Path="ActualHeight" />
                                            <Binding ElementName="border" Path="CornerRadius" />
                                            <Binding ElementName="border" Path="BorderThickness" />
                                        </MultiBinding>
                                    </ProgressBar.Clip>
                                </ProgressBar>
                            </Grid>
                        </AdornerDecorator>
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <wpf:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </wpf:Ripple.Clip>
                        </wpf:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConfirmButtonStyle" TargetType="Button" BasedOn="{StaticResource RectangularButtonStyle}">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="10 10"/>
        <Setter Property="Background" Value="Green"/>
        <Setter Property="BorderBrush" Value="LightSeaGreen"/>
    </Style>
    <Style x:Key="CancelButtonStyle" TargetType="Button" BasedOn="{StaticResource RectangularButtonStyle}">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="10 10"/>
        <Setter Property="Background" Value="DarkRed"/>
        <Setter Property="BorderBrush" Value="IndianRed"/>
    </Style>
    <Style x:Key="AddButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedAccentButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="-5"/>
        <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth0"/>
        <Setter Property="md:ButtonAssist.CornerRadius" Value="3"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="EditButtonStyle" TargetType="Button" BasedOn="{StaticResource RectangularButtonStyle}"/>
    <Style x:Key="RemoveButtonStyle" TargetType="Button" BasedOn="{StaticResource RectangularButtonStyle}">
        <Setter Property="Background" Value="DarkRed"/>
        <Setter Property="BorderBrush" Value="IndianRed"/>
    </Style>

    <Style x:Key="MainGroupBoxStyle" TargetType="GroupBox" BasedOn="{StaticResource MaterialDesignGroupBox}">
        <Setter Property="FontSize" Value="{StaticResource MainFontSize}"/>
    </Style>

    <Style x:Key="ListViewCardPanelStyle" TargetType="ListView" BasedOn="{StaticResource MaterialDesignListView}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OnlyReadDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="md:DataGridAssist.CornerRadius" Value="10"/>
        <Setter Property="FontSize" Value="{StaticResource DataGridFontSize}"/>   
    </Style>

    <Style x:Key="DataGridEditingCellStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Background" Value="{StaticResource MaterialDesignSelection}"/>
    </Style>
    <Style x:Key="OnlyEditDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="md:DataGridAssist.CornerRadius" Value="10"/>
        <Setter Property="md:DataGridAssist.EnableEditBoxAssist" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource DataGridFontSize}"/>
    </Style>

    <Style x:Key="MainScrollViewerStyle" TargetType="ScrollViewer" BasedOn="{StaticResource MaterialDesignScrollViewer}">
        <Setter Property="md:ScrollViewerAssist.SupportHorizontalScroll" Value="False"/>
        <Setter Property="md:ScrollViewerAssist.IsAutoHideEnabled" Value="True"/>
    </Style>

    <Style x:Key="MainComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="md:ValidationAssist.OnlyShowOnFocus" Value="False"/>
        <Setter Property="md:ValidationAssist.FontSize" Value="{StaticResource ValidationMessageFontSize}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="md:ValidationAssist.OnlyShowOnFocus" Value="False"/>
        <Setter Property="md:ValidationAssist.FontSize" Value="{StaticResource ValidationMessageFontSize}"/>
    </Style>

    <Style x:Key="MainAutoCompleteComboBoxStyle" TargetType="accb:AutoCompleteComboBox" BasedOn="{StaticResource MainComboBoxStyle}"/>
</ResourceDictionary>